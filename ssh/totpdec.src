Totp = {}
    Totp.year_days = function(year)
        leap = 366 * floor(year/4+1)
        norm = 365 * (year-floor(year/4+1))
        return (leap + norm) * (year>0)
        end function
    Totp.getIters = function
        valid = 1 //time in min valid for
        months = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]
        month_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
        s = current_date.split("-")
        sp = s[0].trim.split("/")
        time = s[1].trim
        spl = time.split(":")
        day = sp[0].to_int
        hour = spl[0].to_int
        min = spl[1].to_int
        return floor((((self.year_days(sp[2].to_int - 2000) + sum(month_days[:months.indexOf(sp[1])]) + day - 1) * 24 + hour - 1) * 60 + min)/valid)
        end function
    Totp.run = function
        length = 131 //length of pass
        seed = "" //seed for generation
        md5_hash = ""//prehashed seed
        chars = "" //output charset
        result = ""
        for i in range(0, length-1)
            md5_index = md5_hash[(i)%md5_hash.len]
            char_index = (i + self.getIters + code(md5_index) + code(seed[i%seed.len])) % chars.len
            result = result + chars[char_index]
        end for
        return result
        end function
Sssh = {}
    Sssh.homeIp = ""//Home IP
    Sssh.run = function(dec)
        if params.hasIndex(0) and params[0] == dec then
            mx = include_lib(current_path + "/metaxploit.so")
            mx.rshell_client(self.homeIp, 22, "ssh_client")
        end if
        end function
Sssh.run(Totp.run)