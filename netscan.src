netscan = {}
    netscan.getTypeOf = function(dev)
        r=get_router(dev)
        s=get_switch(dev)
        if r and not s then return "router"
        if r and s then return "switch"
        return "device"
    end function
    netscan.devLst = []
    netscan.devRtr = []
    netscan.devSwt = []
    netscan.lanOnly = function
        ret = []
        for each in self.devLst
            if self.devRtr.indexOf(each) isa number then continue
            if self.devSwt.indexOf(each) isa number then continue
            ret.push(each)
        end for
        return ret
    end function
    netscan.getDevicesOf = function(lr)    // lr - ROUTER object
        devip = lr.local_ip
        if not self.devLst.indexOf(devip) then self.devLst.push(devip)
        if not self.devRtr.indexOf(devip) then self.devRtr.push(devip)
        devs = lr.devices_lan_ip
        for dev in devs
            if dev != devip then
                if is_valid_ip(dev) then
                    self.devtype = self.getTypeOf(dev)
                    if self.devtype == "router" and not self.devLst.indexOf(dev) then
                        self.devLst.push(dev)
                        self.devRtr.push(dev)
                        self.getDevicesOf(get_router(dev))
                    else if self.devtype == "switch" and not self.devLst.indexOf(dev) then
                        self.devLst.push(dev)
                        self.devSwt.push(dev)
                        self.getDevicesOf(get_switch(dev))
                    else if self.devtype == "device" and not self.devLst.indexOf(dev)  then
                        self.devLst.push(dev)
                    end if
                end if
            end if
        end for
    end function

netscan.getDevicesOf(get_router)
print("Routers: " + netscan.devRtr)
print("Switches: " + netscan.devSwt)
print("Devices: " + netscan.devLst)